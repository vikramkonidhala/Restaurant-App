{"version":3,"sources":["components/MenuItem/index.js","components/FoodItem/index.js","components/Home/index.js","App.js","index.js"],"names":["MenuItem","props","name","isSelected","onChangeMenuCategory","itemClassName","_jsx","children","className","onClick","type","FoodItem","data","onIncreaseQuantity","onDecreaseQuantity","dishId","dishName","dishCurrency","dishPrice","dishImage","dishCalories","dishDescription","dishAvailability","dishType","addonCat","itemQuantity","quantity","_jsxs","src","alt","length","Home","restaurantName","tableMenuList","menuItems","map","each","menuCategory","newObject","forEach","menuItem","formattedCategoryDishes","categoryDishes","eachDish","dish_id","dish_name","dish_currency","dish_price","dish_image","dish_calories","dish_description","dish_Availability","dish_Type","_useState","useState","_useState2","_slicedToArray","selectedCategory","setSelectedCategory","_useState3","_useState4","foodItems","setFoodItems","_useState5","_useState6","cartCount","setCartCount","id","increasedQuantity","_objectSpread","updatedFoodItems","prev","AiOutlineShoppingCart","eachItem","apiStatusConstants","App","apiStatus","setApiStatus","restaurantData","setRestaurantData","useEffect","getRestaurantData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","formattedTableMenuList","formattedData","wrap","_context","next","fetch","sent","json","ok","table_menu_list","menu_category","categoryId","menu_category_id","category_dishes","restaurant_name","stop","apply","arguments","Loader","color","height","width","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fee72ecc.chunk.js","sourcesContent":["import './index.css'\n\nconst MenuItem = props => {\n  const {name, isSelected, onChangeMenuCategory} = props\n  const itemClassName = isSelected ? 'selected-menu' : 'menu-item'\n  const onClickMenuItem = () => {\n    onChangeMenuCategory(name)\n  }\n\n  return (\n    <li>\n      <button className={itemClassName} onClick={onClickMenuItem} type=\"button\">\n        {name}\n      </button>\n    </li>\n  )\n}\n\nexport default MenuItem\n","import './index.css'\n\nconst FoodItem = props => {\n  const {data, onIncreaseQuantity, onDecreaseQuantity} = props\n  const {\n    dishId,\n    dishName,\n    dishCurrency,\n    dishPrice,\n    dishImage,\n    dishCalories,\n    dishDescription,\n    dishAvailability,\n    dishType,\n    addonCat,\n    quantity,\n  } = data\n\n  const itemQuantity = quantity\n\n  const onIncrementQuantity = () => {\n    onIncreaseQuantity(dishId)\n  }\n\n  const onDecrementQuantity = () => {\n    onDecreaseQuantity(dishId)\n  }\n\n  return (\n    <li className=\"food-item\">\n      <div className=\"container-1\">\n        {dishType === 1 ? (\n          <img\n            className=\"dish-type\"\n            src=\"https://img.icons8.com/color/48/vegetarian-food-symbol.png\"\n            alt=\"vegetarian-food-symbol\"\n          />\n        ) : (\n          <img\n            className=\"dish-type\"\n            src=\"https://img.icons8.com/color/48/non-vegetarian-food-symbol.png\"\n            alt=\"non-vegetarian-food-symbol\"\n          />\n        )}\n        <div className=\"dish-details\">\n          <h1 className=\"dish-name\">{dishName}</h1>\n          <p className=\"dish-price\">\n            {dishCurrency} {dishPrice}\n          </p>\n          <p className=\"dish-description\">{dishDescription}</p>\n          {dishAvailability ? (\n            <div className=\"dish-availability\">\n              <button\n                className=\"qty-btn\"\n                type=\"button\"\n                onClick={onDecrementQuantity}\n              >\n                -\n              </button>\n\n              <p className=\"quantity\">{itemQuantity}</p>\n              <button\n                className=\"qty-btn\"\n                type=\"button\"\n                onClick={onIncrementQuantity}\n              >\n                +\n              </button>\n            </div>\n          ) : (\n            <p className=\"dish-not-availability\">Not available</p>\n          )}\n          <p className=\"dish-customizations\">\n            {addonCat.length > 0 && 'Customizations available'}\n          </p>\n        </div>\n      </div>\n      <div className=\"container-2\">\n        <p className=\"dish-calories\">{dishCalories} calories</p>\n        <div className=\"img-container\">\n          <img src={dishImage} className=\"dish-image\" alt={dishName} />\n        </div>\n      </div>\n    </li>\n  )\n}\n\nexport default FoodItem\n","import {useState} from 'react'\nimport {AiOutlineShoppingCart} from 'react-icons/ai'\n\nimport MenuItem from '../MenuItem'\nimport FoodItem from '../FoodItem'\n\nimport './index.css'\n\nconst Home = props => {\n  const {restaurantName, tableMenuList} = props\n  const menuItems = tableMenuList.map(each => each.menuCategory)\n\n  const newObject = {}\n\n  tableMenuList.forEach(menuItem => {\n    const {menuCategory, categoryDishes} = menuItem\n    const formattedCategoryDishes = categoryDishes.map(eachDish => ({\n      dishId: eachDish.dish_id,\n      dishName: eachDish.dish_name,\n      dishCurrency: eachDish.dish_currency,\n      dishPrice: eachDish.dish_price,\n      dishImage: eachDish.dish_image,\n      dishCalories: eachDish.dish_calories,\n      dishDescription: eachDish.dish_description,\n      dishAvailability: eachDish.dish_Availability,\n      dishType: eachDish.dish_Type,\n      addonCat: eachDish.addonCat,\n      quantity: 0,\n    }))\n    newObject[menuCategory] = formattedCategoryDishes\n  })\n\n  const [selectedCategory, setSelectedCategory] = useState(\n    tableMenuList[0].menuCategory,\n  )\n  const [foodItems, setFoodItems] = useState(newObject)\n  const [cartCount, setCartCount] = useState(0)\n\n  const onChangeMenuCategory = name => {\n    setSelectedCategory(name)\n  }\n\n  const onIncreaseQuantity = id => {\n    const increasedQuantity = foodItems[selectedCategory].map(each => {\n      if (each.dishId === id) {\n        return {\n          ...each,\n          quantity: each.quantity + 1,\n        }\n      }\n      return each\n    })\n    const updatedFoodItems = {...foodItems}\n    updatedFoodItems[selectedCategory] = increasedQuantity\n    setFoodItems(updatedFoodItems)\n    setCartCount(prev => prev + 1)\n  }\n\n  const onDecreaseQuantity = id => {\n    const increasedQuantity = foodItems[selectedCategory].map(each => {\n      if (each.dishId === id) {\n        if (each.quantity !== 0) {\n          setCartCount(prev => (prev === 0 ? 0 : prev - 1))\n        }\n        return {\n          ...each,\n          quantity: each.quantity === 0 ? 0 : each.quantity - 1,\n        }\n      }\n      return each\n    })\n    const updatedFoodItems = {...foodItems}\n    updatedFoodItems[selectedCategory] = increasedQuantity\n    setFoodItems(updatedFoodItems)\n  }\n\n  const getSelectedCategoryFoodItem = () => {\n    const itemsList = foodItems[selectedCategory]\n    return itemsList\n  }\n\n  return (\n    <div className=\"food-app\">\n      <nav className=\"nav-bar\">\n        <h1 className=\"cafe-name\">{restaurantName}</h1>\n        <div className=\"nav-items\">\n          <p className=\"my-orders\">My Orders</p>\n          <div className=\"cart\">\n            <AiOutlineShoppingCart className=\"cart-icon\" />\n            <span className=\"cart-count\">{cartCount}</span>\n          </div>\n        </div>\n      </nav>\n      <ul className=\"menu-list\">\n        {menuItems.map(eachItem => (\n          <MenuItem\n            key={eachItem}\n            name={eachItem}\n            isSelected={eachItem === selectedCategory}\n            onChangeMenuCategory={onChangeMenuCategory}\n          />\n        ))}\n      </ul>\n      <ul className=\"food-items-list\">\n        {getSelectedCategoryFoodItem().map(eachItem => (\n          <FoodItem\n            key={eachItem.dishId}\n            data={eachItem}\n            onIncreaseQuantity={onIncreaseQuantity}\n            onDecreaseQuantity={onDecreaseQuantity}\n          />\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default Home\n","import {useState, useEffect} from 'react'\n\nimport Loader from 'react-loader-spinner'\n\nimport Home from './components/Home'\n\nimport './App.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  inProgress: 'IN_PROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nconst App = () => {\n  const [apiStatus, setApiStatus] = useState(apiStatusConstants.initial)\n  const [restaurantData, setRestaurantData] = useState({})\n\n  useEffect(() => {\n    const getRestaurantData = async () => {\n      const apiUrl =\n        'https://run.mocky.io/v3/77a7e71b-804a-4fbd-822c-3e365d3482cc'\n      const response = await fetch(apiUrl)\n      const data = await response.json()\n      if (response.ok) {\n        const formattedTableMenuList = data[0].table_menu_list.map(each => ({\n          menuCategory: each.menu_category,\n          categoryId: each.menu_category_id,\n          categoryDishes: each.category_dishes,\n        }))\n        const formattedData = {\n          restaurantName: data[0].restaurant_name,\n          tableMenuList: formattedTableMenuList,\n        }\n        setRestaurantData(formattedData)\n        setApiStatus(apiStatusConstants.success)\n      }\n    }\n    getRestaurantData()\n  }, [])\n\n  return apiStatus === apiStatusConstants.initial ? (\n    <div className=\"restaurant-app\">\n      <Loader type=\"TailSpin\" color=\"#0284c7\" height={50} width={50} />\n    </div>\n  ) : (\n    <Home\n      restaurantName={restaurantData.restaurantName}\n      tableMenuList={restaurantData.tableMenuList}\n    />\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}